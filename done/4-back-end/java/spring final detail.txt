 IoC is a container that injects dependencies while creating the bean.
The interface org.springframework.context.ApplicationContext represents the Spring IoC container.

@Transactional
========Method Use For All Detail==========
BankTransaction btx = entityManager.getTransaction(); 
try { 
   btx.begin(); 
   transferMoney(); 
   btx.commit(); 
}
catch(Exception ex) {
   btx.rollback(); 
   throw ex; 
}
==========================================
Spring MVC and Spring REST are two different aspects of the Spring Framework.

<dependency>
<groupId>org.springframework.boot</groupId>
<artifactId>spring-boot-starter-web</artifactId>
</dependency>

@RequestMapping(
   value = {"/hello"},
   params = {"id","name"},
   method = {RequestMethod.GET}, 
   consumes = {"text/plain"}, 
   produces = {"application/json","application/xml"},
   headers = {"name=Robert", "id=1"}
)

@GetMapping annotation is the HTTP method ‘GET’ specific variant of the annotation @RequestMapping.
It is a shortcut version of the ‘@RequestMapping‘ 

@ModelAttribute annotation is commonly known as data binding

This is required because for security reasons,
@CrossOrigin is an annotation in Spring Framework used to enable Cross-Origin Resource Sharing (CORS) for specific handlers or controller classes. 

SOAP is a protocol that defines a standardized format for exchanging structured information between networked applications. It relies on XML for message formatting and is based on a client-server model.
Web Service Definition Language (WSDL).

WSDL/XSD
@Endpoint custome endpoitn create